<pre class='metadata'>
Title: Cas d'utilisation de COAR Notify / Orchestrator
Shortname: orchestrator
Level: 1
Status: DREAM
Status Text: Oh bot
Editor: Patrick Hochstenbach, UGent, patrick.hochstenbach@ugent.be
Markup Shorthands: markdown yes
Abstract:

</pre>

<p>
<class class="note">
Dans ce document, tous les exemples de COAR Notify sont répertoriés en tant que sections principales avec une description brève des cas d'utilisation annotés avec des notes d'implémentation locale possibles.
</class>
</p>

<p>
<class class="note">
Chaque section principale est divisée en sous-sections pour fournir des exemples de la manière dont une configuration Mellon/Orchestrator pourrait répondre aux messages de notification entrants et sortants.
</class>
</p>

# Scénario 1 : L'auteur demande une évaluation avec une possible approbation (via un journal superposé)

À partir de [COAR](https://notify.coar-repositories.org/scenarios/1/):
<i>L'auteur correspondant demande une évaluation à partir d'un journal superposé pour l'un de ses articles, conservé dans un dépôt. Le journal superposé informe le dépôt des évaluations et approbations réussies.</i>

<p>
<class class="note">
Le *dépôt* est interprété comme le **Data Pod** dans les exemples ci-dessous.
</class>
</p>

<p>
<class class="note">
Le *journal* est interprété comme le **Service de certification** dans les exemples ci-dessous.
</class>
</p>

<img src="images/scenario-1.svg" width="80%">

- Le **Responsable** lance un processus de révision auprès d'un *Service de Certification*
    - Il n'est pas précisé comment ce processus doit être démarré
    - On suppose que le service de certification connaît ou découvre l'emplacement de la boîte de réception Scholarly du responsable.
- Le **Service de Certification** lance un flux de révision et envoie après un certain temps une notification `Annonce` AS2 à la boîte de réception (Scholarly) du **Data Pod**
    - L'`Annonce` contient comme `objet` un lien vers la révision publiée
    - L'`Annonce` contient comme `objet` un lien vers un artefact sur le data pod
    - On suppose que le data pod répondra avec un code HTTP 200 ou 202 à la soumission à la boîte de réception par le service de certification
    - La boîte de réception Scholarly PEUT être la boîte de réception principale du data pod ou une boîte de réception spécialisée créée pour l'orchestrateur
    - Le data pod peut AVOIR des mécanismes de validation en place et retourner des codes HTTP 4** lorsque qu'une forme de notification inconnue a été soumise à la boîte de réception
- Le **Service de Certification** lance un flux de certification et envoie une notification `Annonce` AS2 à la boîte de réception (Scholarly) 
    - Dans les cas d'utilisation ci-dessous, on suppose que les mêmes hypothèses peuvent être faites pour toute notification `Annonce` envoyée par un service de certification

## L'orchestrateur lit la boîte de réception d'un data pod et met à jour un journal d'événements

<img src="images/scenario-1-a.svg" width="80%">
- L'**Orchestrator** interroge la **boîte de réception** (académique) du **Data Pod**
- L'**Orchestrator** répertorie les notifications entrantes
    - L'orchestrateur PEUT filtrer la liste de la boîte de réception pour les formes de ressources
    - L'orchestrateur PEUT ignorer les notifications non fiables ou invalides
    - L'orchestrateur PEUT filtrer les notifications concernant des ressources qui n'existent plus dans le data pod
    - L'orchestrateur DOIT traiter chaque notification une seule fois
    - L'orchestrateur PEUT avoir seulement la permission de lecture de la boîte de réception
    - Dans un scénario de boîte de réception partagée, plusieurs applications ainsi que le gestionnaire PEUVENT vouloir agir sur les notifications entrantes
- L'**Orchestrator** sélectionne la notification qu'il souhaite traiter
- L'**Orchestrator** met à jour le **Journal des événements du cycle de vie de l'artefact** avec la notification
    - L'orchestrateur PEUT stocker une version traitée de la notification `Announce` dans le journal des événements
    - L'`@id` de la notification stockée DOIT être unique dans tous les journaux d'événements du data pod
    - Le temps de mise à jour de l'événement DOIT être l'heure d'écriture de la ressource du journal des événements
    - Le journal des événements du cycle de vie de l'artefact DOIT être accessible en lecture publique

Problème : Quels sont les exigences sur la forme du journal des événements.

Problème : Un orchestrateur déclenché par une mise à jour des artefacts du data pod par un autre mécanisme est exclu de cette discussion.

## Une application cliente lit le journal des événements et met à jour l'artefact

<img src="images/scenario-1-b.svg" width="80%">

- L'**application** interroge le **journal d'événements du cycle de vie de l'artefact** du **Data Pod**
   - L'application sait que le journal d'événements est une ressource de confiance en lecture seule pour les notifications pertinentes qui doivent être traitées
     - L'application n'a pas besoin de refaire le travail de l'orchestrateur pour nettoyer la boîte de réception du pod de données (scientifique)
   - L'application PEUT filtrer le journal d'événements pour les formes
   - L'application PEUT filtrer les notifications auto-référencées
     - Cela concerne les cas où toute mise à jour du pod de données pourrait déclencher une mise à jour du journal d'événements
- L'**application** répertorie les nouveaux événements non encore traités
- L'**application** découvre l'événement `Annonce`
- L'**application** est configurée par le responsable pour mettre automatiquement à jour les métadonnées de l'artefact avec un lien de révision
   - L'application PEUT envoyer une notification à la boîte de réception scientifique pour informer l'orchestrateur de ce fait

## Un responsable utilise le tableau de bord pour lire le journal d'événements et mettre à jour les artefacts

<img src="images/scenario-1-c.svg" width="80%">

- Le **responsable** ouvre le tableau de bord (scientifique) et répertorie les nouveaux événements
  - Le tableau de bord sait que le journal d'événements est une ressource de confiance en lecture seule pour les notifications pertinentes qui doivent être traitées
    - Le tableau de bord n'a pas besoin de refaire le travail de l'orchestrateur pour nettoyer la boîte de réception du pod de données (scientifique)
  - Le tableau de bord PEUT filtrer le journal d'événements pour les formes
  - Le tableau de bord PEUT filtrer les notifications auto-référencées
    - Cela concerne les cas où toute mise à jour du pod de données pourrait déclencher une mise à jour du journal d'événements
- Le **responsable** découvre l'événement `Annonce`
- Le **tableau de bord** suggère de mettre à jour les métadonnées de l'artefact dans le **Data Pod** avec le lien de révision
- Le **responsable** approuve et le **tableau de bord** met à jour les métadonnées de l'artefact

## L'orchestrateur utilise des politiques pour mettre à jour les centres de services

<img src="images/scenario-1-d.svg" width="80%">- L'**Orchestrator** a pour politique de mettre à jour une gamme de **Service Hubs**
    - Il peut s'agir du même Orchestrator qui traite la boîte de réception ou d'un orchestrator institutionnel
    - L'orchestrateur utilise le journal des événements comme une ressource d'ajout de confiance pour les Notifications pertinentes qui doivent être traitées
- L'**Orchestrator** peut interroger un journal des événements local
- L'**Orchestrator** découvre l'événement `Annonce`
- L'**Orchestrator** associe la notification à un ensemble de politiques et notifie les services pertinents

# Scénario 2 : L'auteur demande une révision avec une possible approbation (via le dépôt)

À partir de [COAR](https://notify.coar-repositories.org/scenarios/2/):
<i>Initié par l'auteur correspondant, un dépôt demande une révision pour l'une de ses ressources à un service de révision de confiance. Aucun accusé de réception n'est envoyé par la revue en superposition, mais elle notifie le dépôt de toute révision réussie et approbations.</i>

<p>
<class class="note">
Le *dépôt* est interprété comme le **Data Pod** dans les exemples ci-dessous.
</class>
</p>

<p>
<class class="note">
Le *journal* est interprété comme le **Service de Certification** dans les exemples ci-dessous.
</class>
</p>

<img src="images/scenario-2.svg" width="80%">
- Dans le **Tableau de bord**, un **Responsable** a initié une demande de révision en utilisant une notification AS2 `Offer` à la boîte de réception du **Service de Certification**
    - Le service de certification DOIT répondre avec un code HTTP 200 ou 202 à l'`Offer`
    - Le service de certification PEUT valider l'`Offer` et retourner des messages d'erreur 4**
    - L'`Offer` DOIT contenir l'emplacement de la boîte de réception (Scholarly) au Data Pod
    - Le Tableau de bord PEUT envoyer une copie carbone de l'Offer à la boîte de réception (Scholarly)
    - Les notifications AS2 PEUVENT nécessiter des signatures ou d'autres mesures de sécurité qui établissent une communication de confiance entre le Tableau de bord et le Service de Certification
- Le **Service de Certification** lance un flux de révision et envoie après un certain temps une notification AS2 `Announce` à la boîte de réception (Scholarly) du **Data Pod**
    - L'`Announce` contient comme `object` un lien vers la révision publiée
    - L'`Announce` contient comme `object` un lien vers un artefact sur le data pod
    - On suppose que le data pod répondra avec un code HTTP 200 ou 202 à la soumission de la boîte de réception par le service de certification
    - La boîte de réception Scholarly PEUT être la boîte de réception principale du data pod ou une boîte de réception spécialisée créée pour l'orchestrateur
    - Le data pod PEUT avoir des mécanismes de validation en place et retourner des codes HTTP 4** lorsqu'une forme de notification inconnue a été soumise à la boîte de réception
- Le **Service de Certification** lance un flux d'approbation et envoie une notification AS2 `Announce` à la boîte de réception (Scholarly)**
    - Dans les cas d'utilisation ci-dessous, on suppose que les mêmes hypothèses peuvent être faites pour toute notification `Announce` envoyée par un service de certification

## L'orchestrateur lit la boîte de réception d'un data pod et met à jour un journal d'événements

<img src="images/scenario-2-a.svg" width="80%">- Le **Tableau de bord** envoie un déclencheur à l'**Orchestrator** pour envoyer une notification `Offer` AS2 au **Service de Certification**
- L'**Orchestrator** interroge la **Boîte de réception** (académique) du **Data Pod**
- L'**Orchestrator** liste les notifications entrantes
    - L'orchestrateur PEUT filtrer la liste de la boîte de réception pour des formes de ressources
    - L'orchestrateur PEUT ignorer les notifications non fiables, invalides
    - L'orchestrateur PEUT filtrer les notifications concernant des ressources qui n'existent plus dans le data pod
    - L'orchestrateur DOIT traiter chaque notification une seule fois
    - L'orchestrateur PEUT avoir uniquement la permission de lecture de la boîte de réception
    - Dans un scénario de boîte de réception partagée, plusieurs applications ainsi que le mainteneur PEUVENT vouloir agir sur les notifications entrantes
- L'**Orchestrator** sélectionne la notification qu'il souhaite traiter
    - L'orchestrateur PEUT ignorer les notifications `Offer` si elles sont trouvées dans la boîte de réception
        - Il PEUT s'agir d'une politique du mainteneur de ne pas ajouter les demandes `Offer` locales au journal d'événements
- L'**Orchestrator** met à jour le **Journal des événements du cycle de vie de l'artefact** avec la notification
    - L'orchestrateur PEUT stocker une version traitée de la notification `Announce` dans le journal d'événements
    - La notification stockée `@id` DOIT être unique dans tous les journaux d'événements du data pod
    - L'heure de mise à jour de l'événement DOIT être l'heure d'écriture de la ressource du journal d'événements
    - Le journal d'événements du cycle de vie de l'artefact DOIT être lisible par le public
- L'**Orchestrator** peut interroger un journal d'événements local
- L'**Orchestrator** découvre l'événement `Announce`
- L'**Orchestrator** associe la notification à un ensemble de politiques et notifie les services pertinents

# Scénario 3 : Une revue de journal superposé annonce la revue et la validation d'un pré-imprimé à un service d'agrégation 'aval' 

A partir de [COAR](https://notify.coar-repositories.org/scenarios/3/):
<i>Un journal superposé annonce qu'il a examiné et approuvé un pré-imprimé à un service d'agrégation 'aval'.</i><p>
<class class="note">
Le *journal* est interprété comme le **Service de Certification** dans les exemples ci-dessous.
</class>
</p>

<p>
<class class="note">
L'*agrégateur* est interprété comme le **Service de Sensibilisation** dans les exemples ci-dessous.
</class>
</p>

<img src="images/scenario-3.svg" width="80%">

- Le **Service de Certification** complète un flux de travail de révision et envoie une notification `Annonce` AS2 à la boîte de réception du **Service de Sensibilisation**
- Le **Service de Certification** complète un flux de travail de recommandation et envoie une notification `Annonce` AS2 à la boîte de réception du **Service de Sensibilisation**

## Le Pod ne reçoit pas de notification

- L'**Orchestrator** reste inactif

# Scénario 4 : Journal Recommande le Preprint (Initié par l'Auteur)

Issu de [COAR](https://notify.coar-repositories.org/scenarios/4/):
<i>Un auteur lance un processus de révision et de recommandation de son preprint en complétant un formulaire sur le système de journal. Les informations soumises incluent l'URI du dépôt du preprint, un PID citable (si disponible) et un lien vers le fichier.</i>

<p>
<class class="note">
Le *dépôt* est interprété comme le **Data Pod** dans les exemples ci-dessous.
</class>
</p>

<p>
<class class="note">
Le *journal* est interprété comme le **Service de Certification** dans les exemples ci-dessous.
</class>
</p>

<img src="images/scenario-4.svg" width="80%">

- Le **Mainteneur** lance un processus d'approbation auprès d'un **Service de Certification**
    - Il n'est pas spécifié comment ce processus doit être lancé
    - Il est supposé que le service de certification connaisse ou découvre l'emplacement de la boîte de réception (scholaire) du mainteneur
- Le **Service de Certification** lance un flux d'approbation et envoie après un certain temps une notification AS2 `Annonce` à la boîte de réception (scholaire) du **Data Pod**
    - L'`Annonce` contient comme `objet` un lien vers la revue publiée
    - L'`Annonce` contient comme `objet` un lien vers un artefact sur le data pod
    - Il est supposé que le data pod répondra par un HTTP 200 ou 202 à la soumission de la boîte de réception par le service de certification
    - La boîte de réception scolaire PEUT être la boîte de réception principale du data pod ou une boîte de réception spécialisée créée pour l'orchestrateur
    - Le data pod peut avoir des mécanismes de validation en place et renvoyer des codes HTTP 4** lorsqu'une forme de notification inconnue a été soumise à la boîte de réception

## Voir le scénario 1

- Les cas d'utilisation possibles pour l'**Orchestrateur** dans le Scénario 4 sont équivalents à [Scénario 1](#scenario-1--author-requests-review-with-possible-endorsement-via-overlay-journal)

# Scénario 5 : Le dépôt demande une revue (au nom de l'auteur correspondant)

À partir de [COAR](https://notify.coar-repositories.org/scenarios/5/):
*Initié par l'auteur correspondant, un dépôt demande une revue pour l'une de ses ressources à un service de revue de confiance.*

<p>
<class class="note">
Le *dépôt* est interprété comme le **Data Pod** dans les exemples ci-dessous.
</class>
</p>

<p>
<class class="note">
Le *journal* est interprété comme le **Service de Certification** dans les exemples ci-dessous.
</class>
</p>

<img src="images/scenario-5.svg" width="80%">
- Le **Maintainer** démarre via le **Tableau de bord** un processus de révision en envoyant une notification `Offre` AS2 à un **Service de Certification**
- Le flux de travail de révision du **Service de Certification** évalue l'offre et envoie un `Accepter` AS2 à la **Boîte de réception** du **Data Pod**
- Les flux de travail de révision du **Service de Certification** créent une révision et envoient un `Annonce` AS2 à la **Boîte de réception** du **Data Pod**

## Voir Scénario 2

- Les cas d'utilisation possibles pour l'**Orchestrator** dans le Scénario 2 sont fonctionnellement équivalents à [Scénario 2](#scenario-2-author-requests-review-with-possible-endorsement-via-repository)

# Scénario 6 : L'auteur soumet à un journal superposé en utilisant un dépôt pour héberger la ressource et les révisions

À partir de [COAR](https://notify.coar-repositories.org/scenarios/6/):
*Le correspondant de l'auteur soumet un article à un journal superposé. Le journal dépose l'article dans un dépôt et organise des révisions. Les révisions sont déposées dans le dépôt.*

<p>
<class class="note">
Dans les exemples ci-dessous, le dépôt est interprété comme **Service d'Enregistrement**.
</class>
<p>

<p>
<class class="note">
Le dépôt PEUT demander à un **Maintainer** de réviser un manuscrit.
</class>
<p>

<p>
<class class="note">
Le *journal* est interprété comme le **Service de Certification** dans les exemples ci-dessous.
</class>
</p>

<img src="images/scenario-6.svg" width="80%">

- Le **Service de Certification** demande qu'un **Service d'Enregistrement** ingère un manuscrit en envoyant une notification `Offer` AS2
- Le flux d'ingestion du manuscrit du **Service d'Enregistrement** accepte le manuscrit et envoie une notification `Accounce` AS2 au **Service de Certification**
- Les évaluateurs sont invités à soumettre des évaluations au **Service d'Enregistrement**
    - La manière de le faire n'est pas spécifiée
- Le **Service d'Enregistrement** notifie le **Service de Certification** d'une nouvelle évaluation en envoyant une notification `Announce` AS2
- Le **Service de Certification** lance un flux de validation et notifie le **Service d'Enregistrement** avec une notification `Announce` AS en cas de succès

## Le Service d'Enregistrement demande une évaluation au responsable. L'orchestrateur est déclenché pour envoyer des notifications AS2

<img src="images/scenario-6-a.svg" width="80%">

<class class="note">
Ce scénario examine comment un évaluateur peut être invité à soumettre une évaluation pour un manuscrit dans un **Service d'Enregistrement**.
</class>- Le **Service d'Inscription** découvre la boîte de réception (Scholarly) d'un **Responsable**
- Le **Service d'Inscription** invite un **Responsable** à soumettre une évaluation en envoyant une notification `Offre` AS2
- Le **Responsable** est notifié de l'offre
    - Cela peut être fait de plusieurs manières :
        - L'orchestrateur réalise des actions pour notifier le responsable de l'offre (par exemple, envoyer un e-mail)
        - Le tableau de bord interroge la boîte de réception (scholaire) et présente des tâches au responsable
- Le **Responsable** accepte la tâche dans le **Tableau de bord**
- Le **Tableau de bord** envoie un déclencheur à l'**Orchestrateur** pour accepter l'offre
- L'**Orchestrateur** met à jour le **Journal des Événements**
- L'**Orchestrateur** envoie une notification `Accepter` AS2 au **Service d'Inscription**
- Le **Responsable** soumet via le **Tableau de bord** une évaluation
- Le **Tableau de bord** envoie un déclencheur à l'**Orchestrateur** pour annoncer l'évaluation
- L'**Orchestrateur** met à jour le **Journal des Événements**
- L'**Orchestrateur** envoie une notification `Annonce` AS2 au **Service d'Inscription**

# Scénario 7 : Le Service d'Évaluation Annonce l'Évaluation d'une Prépublication à un Agrégateur

Depuis [COAR](https://notify.coar-repositories.org/scenarios/7/):
<i>Un service d'évaluation annonce qu'il a évalué et approuvé une prépublication à un service d'agrégation "aval".</i>

<p>
<class class="note">
Le *service d'évaluation* est interprété comme le **Service de Certification** dans les exemples ci-dessous.
</class>
</p>

<p>
<class class="note">
L'*agrégateur* est interprété comme le **Service de Sensibilisation** dans les exemples ci-dessous.
</class>
</p>

<img src="images/scenario-7.svg" width="80%">

- Un **Service de Certification** publie une évaluation et une approbation
- Un **Service de Certification** envoie une notification `Annonce` AS2 à un **Service de Sensibilisation**

## Le Pod ne reçoit pas de notification

- L'**Orchestrateur** reste inactif

# Scénario 8 : Le Service d'Évaluation Annonce l'Évaluation d'une Prépublication à un Dépôt

Depuis [COAR](https://notify.coar-repositories.org/scenarios/7/):
<i>Un service de révision annonce qu'il a examiné et approuvé une prépublication dans le référentiel.</i>

<class class="note">
    Le *référentiel* est interprété comme le **Data Pod** dans les exemples ci-dessous.
</class>

<p>
<class class="note">
    Le *service de révision* est interprété comme le **Service de certification** dans les exemples ci-dessous.
</class>
</p>

<img src="images/scenario-8.svg" width="80%">

- Un **Service de certification** publie un examen et une approbation
- Un **Service de certification** envoie une notification `Annonce` AS2 à la **Boîte de réception** (Scholarly) du **Data Pod**

## Voir le scénario 1

- Les cas d'utilisation possibles pour l'**Orchestrator** dans le scénario 8 sont fonctionnellement équivalents à [Scénario 1](#scenario-1--author-requests-review-with-possible-endorsement-via-overlay-journal)

# Scénario 9 : L'auteur demande des révisions au service de révision, via le référentiel

Depuis [COAR](https://notify.coar-repositories.org/scenarios/9/):
<i>Un service de révision annonce qu'il a examiné et approuvé une prépublication dans le référentiel.</i>

<p>
<class class="note">
    Le *référentiel* est interprété comme le **Data Pod** dans les exemples ci-dessous.
</class>
</p>

<p>
<class class="note">
    Le *service de révision* est interprété comme le **Service de certification** dans les exemples ci-dessous.
</class>
</p>

<img src="images/scenario-9.svg" width="80%">

- Dans le **Tableau de bord**, un **Responsable** a initié une demande de révision en utilisant une notification `Offre` AS2 dans la boîte de réception du **Service de certification**
- Le **Service de certification** lance un flux de travail de révision et envoie après un certain temps une notification `Annonce` AS2 à la **Boîte de réception** (Scholarly) du **Data Pod**
- Le **Service de certification** lance un flux de travail d'approbation et envoie une notification `Annonce` AS2 à la **Boîte de réception** (Scholarly)- Les cas d'utilisation possibles de l'**Orchestrator** dans le scénario 9 sont fonctionnellement équivalents à [Scénario 2](#scenario-2-author-requests-review-with-possible-endorsement-via-repository)

# Remerciements

Nous remercions Herbert Van de Sompel, [DANS + Université de Gand](https://dans.knaw.nl/nl/), hvdsomp@gmail.com
pour sa précieuse contribution à ce projet.