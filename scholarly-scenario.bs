<pre class='metadata'>
Title: Scholarly use cases
Shortname: orchestrator
Level: 2
Status: DREAM
Editor: Patrick Hochstenbach
Markup Shorthands: markdown yes
Abstract: TODO
</pre>

# Alice creates a scholary artefact

<img src="images/spec-usecases_scholarly_1.svg"/>

- Alice logins into her dashboard
- She creates a new artefact stub
    - Adds some metadata:
        - Title
        - Author(s)
            - as WebIds
        - Subjects
            - ontology based
        - Abstract
        - Status
            - Private
            - Public
        - Status ..set of   
            - [ ] Registered
            - [ ] Certified
            - [ ] Archived
- The artefact will result in a new landing page on the pod
    - With all the descriptive metadata
    - With technical metadata
        - Creation date
        - Last update date
        - Files
            - Number of files
            - Sizes
            - Names
            - Types
    - It will trigger an `as:Create` about the artefact

- Alice can upload one or more files for this artefact
    - It will trigger an `as:Update` about the artefact

- Alice can delete one or more files in this artefact
    - It will trigger an `as:Update` about the artefact

- Alice can edit the metadata for this artefact
    - It will trigger an `up:Update` about the artefact

- Alice can delete the artefact
    - It will trigger an `as:Delete` about the artefact

- Alice can say the artefact is ready for view
    - It will trigger an `as:Announce` about the artefact
    - It will trigger an update of the Alice's event log by her
      orchestrator 
      
# Bob want to know about Alices artefacts

<img src="images/spec-usecases_scholarly_2.svg"/>

- Bob's orchestrator receives Announces from Alice's Event log
- Bob's orchestrator sends an notification to Bob's inbox

# Alice can send a notification to a ServiceHub

<img src="images/spec-usecases_scholarly_3.svg"/>

- Alice select an artefact 
- Alice can send a new notification for this artefact
    - Select a ServiceHub target from a list
        - The list of ServiceHub-s is available from a FOAF-registry file
    - Optionally add a short note 
        - mapped to `as:content`
- It will trigger an:
    - `as:Offer` to the Service Hub target 
- Alice's Orchestrator will append to the Event Log of the Alice pod
- Alice's Orchestrator will forward the notification to the Service Hub

# Alice can see an overview of all notifications and events of her pod

# Registration hub accepts Offers from Alice

<img src="images/spec-usecases_scholarly_5.svg"/>

    - Registration agency is e.g. an institutional repository
    - The Registration orchestrator 
        - Automatic accepts offers 
        - Forwards accepted messages to a registration manager
    - Registration manager adds a record in the collection system
        - Sees an overview of accepted offers
        - Can read the artefact URL
        - Does some (semi-)manual work in the institutional repository to add the
    artefact
        - Can send a `as:Announce` response back to Alice
    - The Registrator orchestrator
        - Forwards the notifiction to Alice
        - Append to the Registrator Event Log 
    - Alice's Orchestrator will be triggered by the notification
        - Append to the Event Log of Alice

# Archivation hub accepts services

<img src="images/spec-usecases_scholarly_6.svg"/>

- Archivation orchestrator accepts `as:Offer` from Alice for archivation of data
    - Triggers an `as:Accept`
- Alice's Orchestrator will update the Event Log on Alice Pod based on 
  this trigger
- Archivation will be triggered by the Archivator Orchestrator:
    - Download the artefact from Alice's pod
    - Create a BagIt to upload in Meemoo
    - Poll Meemoo to see if the data is archived
- When the archivation results in a new ArchivedUrl, the Archivator Orchestrator will 
 trigger an `as:Announce` to Alice's Pod

- Alice's Orchestrator will update the Event Log on Alice Pod based 
 on this trigger

# Orchestrator suggests Services

- Based on status of the metadata
- Based on univesity policies

E.g.

- *Library* request to Offer New registered artefacts to 
    be registered at the institutional repository
    - Can be automated
- *Faculty* request to Offer New registerd artefacts to 
    a faculty registry
    - Can be automated
- *University* request to Offer New registered artefacts to
    a Data Management Plan service
        E.g. https://dmponline.be
    - Requires manual intervention by Alice
- *Conference* request to Offer an artefact about a topic
    - Requires manual intervation by Alice
- *Discovery Hub* request to Offer new artefacts to be included
    in the index    
    - Can be automated